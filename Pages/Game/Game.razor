@page "/game/{GameId:guid}"
@using System.Text.Json;

@if (ActiveGame != null)
{
    <div class="grid" style="--players:@ActiveGame.Players.Count">

        <div class="header">Hål</div>
        <div class="header">Idx</div>
        <div class="header">Par</div>
        @foreach (var player in ActiveGame.Players)
        {
            <div class="header name">@player.Name</div>
        }
        @foreach (var hole in ActiveGame.Course.Holes)
        {
            <div class="hole">@hole.Key</div>
            <div class="hole">@hole.Value.Index</div>
            <div class="hole">@hole.Value.Par</div>
            @foreach (var player in ActiveGame.Players)
            {
                <div class="player-result">
                    <select value="@((player.Strokes != null && player.Strokes.ContainsKey(hole.Key)) ? player.Strokes[hole.Key] : 0) " class="form-select-sm select-score" @onchange="@((e) => SetStroke(player, int.Parse(e.Value.ToString()), hole.Key))">
                        <Scorecard.Components.Score.Score Par="@hole.Value.Par"></Scorecard.Components.Score.Score>
                    </select>
                    <label>@(player.Stableford.ContainsKey(hole.Key) ? player.Stableford[hole.Key] : "")</label>
                </div>
            }
            @if (hole.Key == 9 && ActiveGame.Course.Holes.Count == 18)
            {
                <div class="summa">Sum out</div>
                @foreach (var player in ActiveGame.Players)
                {
                    <div class="player-summa">
                        <label>@player.Strokes.Where(t => t.Key < 10).Sum(t => t.Value)</label>
                        <label style="padding-left: 0.8rem;">@player.Stableford.Where(t => t.Key < 10).Sum(t => t.Value)</label>
                    </div>
                }
            }
        }
        @if(ActiveGame.Course.Holes.Count == 18)
        {
            <div class="summa">Sum in</div>
            @foreach (var player in ActiveGame.Players)
            {
                <div class="player-summa">
                    <label>@player.Strokes.Where(t => t.Key > 9).Sum(t => t.Value)</label>
                    <label style="padding-left: 0.8rem;">@player.Stableford.Where(t => t.Key > 9).Sum(t => t.Value)</label>
                </div>
            }
        }
        <div class="summa">Tot</div>
        @foreach (var player in ActiveGame.Players)
        {
            <div class="player-summa">
                <label>@player.Strokes.Sum(t => t.Value)</label>
                <label style="padding-left: 0.8rem;">@player.Stableford.Sum(t => t.Value)</label>
            </div>
        }
    </div>
}
else
{
    <label>Game is loading...</label>
}


